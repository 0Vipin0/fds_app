name: Flutter Build Releases

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest] # Include macos if you need iOS builds
        include:
          - os: ubuntu-latest
            platform: android
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.1'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Build Android APK
        if: matrix.platform == 'android'
        run: |
          flutter build apk --split-per-abi
          mkdir -p build/android/outputs/apk/
          cp build/app/outputs/flutter-apk/*.apk build/android/outputs/apk/
      - name: Upload Android APK
        if: matrix.platform == 'android'
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/android/outputs/apk/

      - name: Build Linux
        if: matrix.platform == 'linux'
        run: flutter build linux

      - name: Upload Linux Artifact
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: build/linux/x64/release/bundle/

      - name: Build Windows
        if: matrix.platform == 'windows'
        run: flutter build windows

      - name: Upload Windows Artifact
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: build/windows/x64/release/bundle/